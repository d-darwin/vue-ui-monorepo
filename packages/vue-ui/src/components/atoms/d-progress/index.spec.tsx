import { shallowMount } from "@vue/test-utils";
import {
  baseClassCase,
  controlIdAbsenceCase,
  controlIdAutogeneratedCase,
  controlIdPresenceCase,
  elementValueAttrCase,
  offsetCase,
  propStringCase,
  propVNodeCase,
  slotCase,
} from "@/utils/test-case-factories";
import DProgress from "@/components/atoms/d-progress";
import config from "@/components/atoms/d-progress/config";

describe("DProgress", () => {
  const wrapper = shallowMount(DProgress);

  baseClassCase(wrapper, config.className);

  controlIdAbsenceCase(wrapper, `.${config.progressClassName}`);
  controlIdPresenceCase(wrapper, `.${config.progressClassName}`);
  controlIdAutogeneratedCase(wrapper, `.${config.progressClassName}`);

  propStringCase(wrapper, `.${config.labelClassName}`, "label");
  propVNodeCase(wrapper, `.${config.labelClassName}`, "label");
  slotCase(DProgress, `.${config.labelClassName}`, "label");
  offsetCase(wrapper);
  // TODO: props.labelOptions

  elementValueAttrCase(wrapper, 34, `.${config.progressClassName}`);
  // TODO: props.type
  //  - branches
  // TODO: props.progressOptions

  propStringCase(wrapper, `.${config.contentClassName}`, "content");
  propVNodeCase(wrapper, `.${config.contentClassName}`, "content");
  slotCase(DProgress, `.${config.contentClassName}`, "default", {
    value: 0,
  });
  offsetCase(wrapper);
  // TODO: props.contentOptions

  // TODO: add props.loader and $slots.loader
  // TODO: props.loaderOptions

  // TODO: props.caption ...
  // TODO: props.captionOffset
  // TODO: props.captionOptions

  // TODO: props.colorScheme
  // TODO: props.rounding
  // TODO: props.size
  // TODO: props.transition
  // TODO: props.tag

  // TODO: aria attrs
});
